/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author Student
 */
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.StringTokenizer;

public class combinations {

    public static void main(String[] args) {
    String ar1[];
    int i=0, counttrans = 0;
    ArrayList<String> arr = new ArrayList<String>();
    ArrayList<String> arr1 = new ArrayList<String>();
    ArrayList<String> comb2 = new ArrayList<String>();
    ArrayList<String> comb3 = new ArrayList<String>();
    HashMap<String, Integer> map1 = new HashMap<String, Integer>();
    HashMap<String, Integer> map3 = new HashMap<String, Integer>();
    
    LinkedHashMap<String, Integer> map = new LinkedHashMap<String, Integer>();
         try {
        BufferedReader in = new BufferedReader(
                               new FileReader("E:\\r.txt"));
        String str = in.readLine();
        
        while ((str = in.readLine())!= null) {
            //String[] ar =str.split(",");
            StringTokenizer st = new StringTokenizer(str);
            
            st.nextToken();
            String ar = st.nextToken();
            st = new StringTokenizer(ar,",");
            while(st.hasMoreTokens())
            {
                String item = st.nextToken();
                //System.out.println(item);
                if(map.containsKey(item))
                {
                 map1.put(item , map1.get(item)+1);
                }
                else
                {
                    map.put(item, i+1); 
                    map1.put(item,1);
                   arr.add(item);
                    i++;
                }
                
            }
            counttrans++;
            
        }
        in.close();
        
         System.out.println("________ID__________");
 
         int ID=0;
         String key;
        
        for(HashMap.Entry<String, Integer> entry : map.entrySet())
        {
            key = entry.getKey();
            ID = entry.getValue();
            System.out.println(key+" : "+ID);
        }
        
        System.out.println();
        System.out.println("_______Occurance_________");
        
        int value=0;
        
        for(HashMap.Entry<String, Integer> entry : map1.entrySet())
        {
            key = entry.getKey();
            value = entry.getValue();
            System.out.println(key+" : "+value);
        }
        
         System.out.println();
         
        System.out.println("set: "+arr);
        System.out.println("transactions: "+counttrans);
       
       i=0;
       int ite=ID;
       int ite2=ID-1;
       
        for(i=0;i<ite;i++)
        {
             for (int k=i+1;k<ite;k++) 
             {
                  comb2.add(arr.get(i)+" "+arr.get(k));
             }  
        }
       
         System.out.println("comb of 2: "+comb2);
         
        for(i=ite2;i>0;i--)
        {
             for (int k=i-1;k>=0;k--) 
             {
                  comb2.add(arr.get(i)+" "+arr.get(k));
             }  
        }
       
         System.out.println("comb of 2: "+comb2);
		         
		         BufferedReader inn = new BufferedReader(new FileReader("E:\\r.txt"));
		         String str1 = inn.readLine();
		         
		         while ((str1 = inn.readLine())!= null) {
		             //String[] ar =str.split(",");
		             StringTokenizer st1 = new StringTokenizer(str1);
		             
		             st1.nextToken();
		             String ar12 = st1.nextToken();
		             st1 = new StringTokenizer(ar12,",");
		             while(st1.hasMoreTokens())
		             {
		                 String item = st1.nextToken();
		  //System.out.println(item);
		  if(map3.containsKey(item))
		  {
		   
		  }
		  else
		  {
		     
		     arr1.add(item);
		      i++;
		  }
		  
		}
		arraycompare(arr1,comb2);
		
		}
		inn.close();
 
        
    }//try block
         
         
         catch (IOException e) {
        System.out.println("File error"); 
       
    }//catch close
         
         

    }//Closing bracket for main class

	private static void arraycompare(ArrayList<String> arr1,ArrayList<String> arr2) 
	{
		// TODO Auto-generated method stub
		 int i=0;
		 HashMap<String, Integer> map2 = new HashMap<String, Integer>();
		 int ID = 0;
	       int ite=ID;
	       
	       ArrayList<String> comb3 = new ArrayList<String>();
	        for(i=0;i<arr1.size();i++)
	        {
	             for (int k=0;k<arr1.size();k++) 
	             {
	                  comb3.add(arr1.get(i)+" "+arr1.get(k));
	             }  
	        }
		
		for(i = 0;i<comb3.size();i++)
		{
			for(int j = 0;j<arr2.size();j++)
			{
				if(comb3.get(i).equals(arr2.get(j)))
						{
					if(map2.containsKey(comb3.get(i)))
					
		                {
		                 map2.put(comb3.get(i), map2.get(comb3.get(i))+1);
		                }
		                else
		                {
		                    map2.put(comb3.get(i), 1); 
	
		                }
						
				
					}
				else {
					
				}
			
			}
			comb3.remove(i);
		}
		 String key;
		 int ID1;
	        
	        for(HashMap.Entry<String, Integer> entry : map2.entrySet())
	        {
	            key = entry.getKey();
	            ID1 = entry.getValue();
	            System.out.println(key+" : "+ID1);
	        }
		
	}
    
}
